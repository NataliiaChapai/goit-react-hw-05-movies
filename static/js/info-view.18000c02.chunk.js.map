{"version":3,"file":"static/js/info-view.18000c02.chunk.js","mappings":"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","sources":["apiServise/apiServise.js","webpack://react-homework-template/./src/views/MovieInfo/MovieInfo.module.css?fd5e","webpack://react-homework-template/./src/components/BackBtn/BackBtn.module.css?2b72","components/BackBtn/BackBtn.js","views/MovieInfo/MovieInfo.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c3fb1453ab7f1b7a3769167de0ee4418';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopularMovies() {\n  return fetchMovies(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n}\n\nexport function fetchMovieInfo(id) {\n  return fetchMovies(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieActors(id) {\n  return fetchMovies(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieReviews(id) {\n  return fetchMovies(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieInfo_wrapper__m2ewx\",\"img\":\"MovieInfo_img__lD9F4\",\"title\":\"MovieInfo_title__r5NVs\",\"navItem\":\"MovieInfo_navItem__HS-au\",\"nav\":\"MovieInfo_nav__L7Opl\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BackBtn_button__+SV9k\"};","import PropTypes from 'prop-types';\nimport s from './BackBtn.module.css';\n\nexport default function BackBtn({ onClick }) {\n  return (\n    <button type=\"button\" className={s.button} onClick={onClick}>\n      Go back\n    </button>\n  );\n}\n\nBackBtn.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { useEffect, useState, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  Route,\n  Routes,\n  NavLink,\n  useLocation,\n} from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport * as api from '../../apiServise/apiServise';\nimport s from './MovieInfo.module.css';\n// import Cast from '../Cast/Cast';\n// import Reviews from '../Reviews/Reviews';\nimport BackBtn from 'components/BackBtn/BackBtn';\n\nconst Cast = lazy(() =>\n  import('../Cast/Cast.js' /* webpackChunkName: \"cast-view\" */)\n);\nconst Reviews = lazy(() =>\n  import('../Reviews/Reviews.js' /* webpackChunkName: \"reviews-view\" */)\n);\n\nexport default function MovieInfo() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n  const history = createBrowserHistory({ window });\n  const { title, genres, overview, vote_average } = movie;\n  const userScore = vote_average * 10;\n  const src = `https://www.themoviedb.org/t/p/w600_and_h900_bestv2${movie.poster_path}`;\n  let movieGenres = [];\n\n  function onClick() {\n    history.back();\n  }\n\n  if (genres) {\n    movie.genres.map(({ name }) => movieGenres.push(name));\n  }\n\n  useEffect(() => {\n    api.fetchMovieInfo(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    movie && (\n      <>\n        <BackBtn onClick={onClick} />\n        <div className={s.wrapper}>\n          <img src={src} alt={movie.title} className={s.img} />\n          <div className={s.info}>\n            <h2 className={s.title}>{title}</h2>\n            <p className={s.text}>User score: {userScore}%</p>\n            <h3 className={s.title}>Overview</h3>\n            <p className={s.text}>{overview}</p>\n            <h3 className={s.title}>Genres</h3>\n            <p className={s.text}>{movieGenres.join(', ')}</p>\n          </div>\n        </div>\n        <div>\n          <h3 className={s.title}>Additional information</h3>\n          <nav className={s.nav}>\n            <NavLink\n              to={{\n                pathname: `/movies/${movieId}/cast`,\n                state: { from: location },\n              }}\n              className={s.navItem}\n              style={({ isActive }) => ({\n                color: isActive ? 'purple' : 'black',\n              })}\n            >\n              Cast\n            </NavLink>\n            <NavLink\n              to={{\n                pathname: `/movies/${movieId}/reviews`,\n                state: { from: location },\n              }}\n              className={s.navItem}\n              style={({ isActive }) => ({\n                color: isActive ? 'purple' : 'black',\n              })}\n            >\n              Reviews\n            </NavLink>\n          </nav>\n          <Suspense fallback={<div>Please wait...</div>}>\n            <Routes>\n              <Route exact path=\"/cast\" element={<Cast />} />\n              <Route path=\"/reviews\" element={<Reviews />} />\n            </Routes>\n          </Suspense>\n        </div>\n      </>\n    )\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchMovies","url","config","fetch","response","ok","json","Promise","reject","Error","fetchPopularMovies","fetchSearchMovies","query","fetchMovieInfo","id","fetchMovieActors","fetchMovieReviews","BackBtn","onClick","type","className","s","Cast","lazy","Reviews","MovieInfo","movieId","useParams","useState","movie","setMovie","location","useLocation","history","createBrowserHistory","window","title","genres","overview","userScore","vote_average","src","poster_path","movieGenres","map","name","push","useEffect","api","then","back","alt","join","to","pathname","state","from","style","color","isActive","Suspense","fallback","exact","path","element"],"sourceRoot":""}